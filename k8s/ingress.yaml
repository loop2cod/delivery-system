apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: delivery-ingress
  namespace: delivery-management
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://your-domain.ae"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
spec:
  tls:
  - hosts:
    - your-domain.ae
    - www.your-domain.ae
    - admin.your-domain.ae
    - business.your-domain.ae
    - driver.your-domain.ae
    - api.your-domain.ae
    secretName: tls-secret
  rules:
  # Main public site
  - host: your-domain.ae
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: public-pwa-service
            port:
              number: 3000
  
  # WWW redirect
  - host: www.your-domain.ae
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: public-pwa-service
            port:
              number: 3000

  # Admin portal
  - host: admin.your-domain.ae
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin-pwa-service
            port:
              number: 3000

  # Business portal
  - host: business.your-domain.ae
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: business-pwa-service
            port:
              number: 3000

  # Driver mobile app
  - host: driver.your-domain.ae
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: driver-pwa-service
            port:
              number: 3000

  # API backend
  - host: api.your-domain.ae
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 3001

---
# Alternative single-domain ingress with path-based routing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: delivery-ingress-paths
  namespace: delivery-management
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
spec:
  tls:
  - hosts:
    - delivery.your-domain.ae
    secretName: delivery-tls-secret
  rules:
  - host: delivery.your-domain.ae
    http:
      paths:
      # Main public site
      - path: /()(.*)
        pathType: Prefix
        backend:
          service:
            name: public-pwa-service
            port:
              number: 3000
      
      # Admin interface
      - path: /admin(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: admin-pwa-service
            port:
              number: 3000
      
      # Business interface
      - path: /business(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: business-pwa-service
            port:
              number: 3000
      
      # Driver interface
      - path: /driver(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: driver-pwa-service
            port:
              number: 3000
      
      # API endpoints
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 3001
      
      # WebSocket connections
      - path: /ws(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 3001

---
# Network Policies for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: delivery-network-policy
  namespace: delivery-management
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: nginx-ingress
  - from:
    - podSelector:
        matchLabels:
          app: backend
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
  - from:
    - podSelector:
        matchLabels:
          app: public-pwa
    - podSelector:
        matchLabels:
          app: admin-pwa
    - podSelector:
        matchLabels:
          app: business-pwa
    - podSelector:
        matchLabels:
          app: driver-pwa
    ports:
    - protocol: TCP
      port: 3001  # Backend API
  egress:
  - {}  # Allow all egress for external APIs, DNS, etc.

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: delivery-system-metrics
  namespace: delivery-management
  labels:
    app: delivery-system
spec:
  selector:
    matchLabels:
      app: backend
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s