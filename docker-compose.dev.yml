# Docker Compose for Development Environment
version: '3.8'

services:
  # Database Services (same as production but with easier access)
  postgres:
    image: postgres:15-alpine
    container_name: delivery-postgres-dev
    environment:
      POSTGRES_DB: delivery_management_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - delivery-dev-network

  redis:
    image: redis:7-alpine
    container_name: delivery-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - delivery-dev-network

  # Backend API for Development
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: builder  # Use builder stage for development
    container_name: delivery-backend-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dev_user:dev_password@postgres:5432/delivery_management_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-not-for-production
      COOKIE_SECRET: dev-cookie-secret-not-for-production
      PORT: 3001
      CORS_ORIGIN: "*"
      LOG_LEVEL: debug
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app/backend
      - ./shared:/app/shared
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - delivery-dev-network
    command: ["pnpm", "run", "dev"]

  # Development Utilities
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: delivery-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@delivery.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - delivery-dev-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: delivery-redis-commander-dev
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - delivery-dev-network

  # Mailcatcher for testing emails
  mailcatcher:
    image: schickling/mailcatcher
    container_name: delivery-mailcatcher-dev
    ports:
      - "1080:1080"  # Web interface
      - "1025:1025"  # SMTP server
    networks:
      - delivery-dev-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  delivery-dev-network:
    driver: bridge