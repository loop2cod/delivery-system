version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgis/postgis:15-3.3
    container_name: delivery-postgres-dev
    environment:
      POSTGRES_DB: delivery_management_dev
      POSTGRES_USER: delivery_user
      POSTGRES_PASSWORD: delivery_pass_dev
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seeds.sql:/docker-entrypoint-initdb.d/02-seeds.sql
    networks:
      - delivery-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U delivery_user -d delivery_management_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: delivery-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - delivery-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    container_name: delivery-backend-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://delivery_user:delivery_pass_dev@postgres:5432/delivery_management_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_key_change_in_production
      COOKIE_SECRET: dev_cookie_secret_change_in_production
      PORT: 4000
      HOST: 0.0.0.0
      LOG_LEVEL: debug
      CORS_ORIGINS: http://localhost:3001,http://localhost:3002,http://localhost:3003,http://localhost:3004
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - delivery-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: pnpm run dev
    restart: unless-stopped

  # Public PWA (Customer Portal)
  public-pwa:
    build:
      context: .
      dockerfile: Dockerfile.public-pwa
      target: development
    container_name: delivery-public-pwa-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_WS_URL: ws://localhost:4000
      NEXT_PUBLIC_APP_NAME: UAE Delivery Management
      NEXT_PUBLIC_VAPID_PUBLIC_KEY: dev_vapid_key
    ports:
      - "3001:3001"
    volumes:
      - ./packages/public-pwa:/app
      - /app/node_modules
      - /app/.next
    networks:
      - delivery-network
    depends_on:
      - backend
    command: pnpm run dev
    restart: unless-stopped

  # Admin PWA (Administrative Panel)
  admin-pwa:
    build:
      context: .
      dockerfile: Dockerfile.admin-pwa
      target: development
    container_name: delivery-admin-pwa-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_WS_URL: ws://localhost:4000
      NEXT_PUBLIC_APP_NAME: UAE Delivery Admin
    ports:
      - "3002:3002"
    volumes:
      - ./packages/admin-pwa:/app
      - /app/node_modules
      - /app/.next
    networks:
      - delivery-network
    depends_on:
      - backend
    command: pnpm run dev
    restart: unless-stopped

  # Business PWA (Company Portal)
  business-pwa:
    build:
      context: .
      dockerfile: Dockerfile.business-pwa
      target: development
    container_name: delivery-business-pwa-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_WS_URL: ws://localhost:4000
      NEXT_PUBLIC_APP_NAME: UAE Delivery Business
    ports:
      - "3003:3003"
    volumes:
      - ./packages/business-pwa:/app
      - /app/node_modules
      - /app/.next
    networks:
      - delivery-network
    depends_on:
      - backend
    command: pnpm run dev
    restart: unless-stopped

  # Driver PWA (Mobile App)
  driver-pwa:
    build:
      context: .
      dockerfile: Dockerfile.driver-pwa
      target: development
    container_name: delivery-driver-pwa-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_WS_URL: ws://localhost:4000
      NEXT_PUBLIC_APP_NAME: UAE Delivery Driver
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: dev_google_maps_key
    ports:
      - "3004:3004"
    volumes:
      - ./packages/driver-pwa:/app
      - /app/node_modules
      - /app/.next
    networks:
      - delivery-network
    depends_on:
      - backend
    command: pnpm run dev
    restart: unless-stopped

  # Nginx Reverse Proxy (Development)
  nginx:
    image: nginx:alpine
    container_name: delivery-nginx-dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - delivery-network
    depends_on:
      - backend
      - public-pwa
      - admin-pwa
      - business-pwa
      - driver-pwa
    restart: unless-stopped

  # Development Tools
  mailhog:
    image: mailhog/mailhog:latest
    container_name: delivery-mailhog-dev
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - delivery-network

  # Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: delivery-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@deliveryuae.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    networks:
      - delivery-network
    depends_on:
      - postgres

  # Redis Admin (RedisInsight)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: delivery-redis-insight-dev
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data_dev:/db
    networks:
      - delivery-network
    depends_on:
      - redis

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  pgadmin_data_dev:
    driver: local
  redis_insight_data_dev:
    driver: local

networks:
  delivery-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16